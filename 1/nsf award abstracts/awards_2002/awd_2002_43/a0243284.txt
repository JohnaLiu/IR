Title       : RUI: Class Overriding for Anomaly-Free Component Adaptation
Type        : Award
NSF Org     : CCR 
Latest
Amendment
Date        : March 17,  2003     
File        : a0243284

Award Number: 0243284
Award Instr.: Continuing grant                             
Prgm Manager: Sol J. Greenspan                        
	      CCR  DIV OF COMPUTER-COMMUNICATIONS RESEARCH 
	      CSE  DIRECT FOR COMPUTER & INFO SCIE & ENGINR
Start Date  : May 1,  2003        
Expires     : April 30,  2006      (Estimated)
Expected
Total Amt.  : $106341             (Estimated)
Investigator: Atanas Radenski radenski@chapman.edu  (Principal Investigator current)
Sponsor     : Chapman University
	      One University Drive
	      Orange, CA  928669809    714/628-7228

NSF Program : 2880      SOFTWARE ENGINEERING AND LANGU
Fld Applictn: 
Program Ref : ,9216,HPCC,
Abstract    :
              0243284
Atanas Radenski
Chapman University

This project will make
              contributions to the area of component and object oriented languages and
              programming. The goal is to design, implement, and evaluate class overriding -
              a new code adaptation language mechanism that is intended to overcome the
              subclassing anomaly in evolving software components. An in-depth analysis of
              the subclassing anomaly will reveal and systematize its linguistic roots as
              found in compiled object-oriented languages. Class overriding will be designed
              to serve as a generic, language-independent method for anomaly-free component
              adaptation. Translation patterns for class overriding will define an
              implementation model with low run-time overhead.

This project is expected to
              have impact on the language design community and on the software architecture
              community. For the language design community, class overriding will be a
              linguistic mechanism that can be adapted to either new component-oriented
              languages, or to existing object-oriented languages, in order to enhance
              software component adaptability. The software architecture community will be
              able to employ the analysis of the subclassing anomaly to foresee and avoid
              possible adaptation anomalies in evolving object-oriented software
              components.


