Title       : ITR: A Domain-Specific Language for Infopipes
Type        : Award
NSF Org     : CCR 
Latest
Amendment
Date        : August 20,  2002    
File        : a0219686

Award Number: 0219686
Award Instr.: Continuing grant                             
Prgm Manager: D. Helen Gill                           
	      CCR  DIV OF COMPUTER-COMMUNICATIONS RESEARCH 
	      CSE  DIRECT FOR COMPUTER & INFO SCIE & ENGINR
Start Date  : September 1,  2002  
Expires     : August 31,  2005     (Estimated)
Expected
Total Amt.  : $379697             (Estimated)
Investigator: Andrew P. Black   (Principal Investigator current)
              Jonathan Walpole  (Co-Principal Investigator current)
Sponsor     : Oregon Hlth and Science U
	      3181 S W Sam Jackson Rd
	      Portland, OR  972013011    503/748-1031

NSF Program : 1686      ITR SMALL GRANTS
Fld Applictn: 
Program Ref : ,9216,HPCC,
Abstract    :
              This project is creating programming language technology and tools to 
aid the
              development of performance-sensitive distributed streaming 
applications, such
              as real-time sensor networks. The basic idea is to 
design programming
              abstractions that are specific to the domain of 
streaming applications, and
              to develop checking and compilation tools 
for mapping them to the underlying
              operating system mechanisms and 
network protocols.

The approach is based
              on the "Infopipe" programming model, a novel 
approach to building streaming
              applications, currently under 
development by the PIs. Experiments with an
              early prototype have 
shown Infopipes to be very promising. However, language
              tools for 
simplifying the programming task, checking correctness properties
              and 
ensuring adequate performance of complex "Infopipelines" do not
              
currently exist. This proposal outlines the research involved in 
creating
              these tools and presents some novel ideas on the language 
primitives and
              tools for Infopipes, the kinds of Infopipe properties 
that can be
              automatically checked, and the conceptual foundation that 
enables this
              checking to be rigorous.


