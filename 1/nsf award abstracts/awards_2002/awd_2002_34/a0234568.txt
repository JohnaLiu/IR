Title       : Supporting Development of Highly Dependable Software Through Continuous,
               Automated, In-process, and Individualized Software Measurement Validation
Type        : Award
NSF Org     : CCR 
Latest
Amendment
Date        : August 30,  2002    
File        : a0234568

Award Number: 0234568
Award Instr.: Continuing grant                             
Prgm Manager: Frank D. Anger                          
	      CCR  DIV OF COMPUTER-COMMUNICATIONS RESEARCH 
	      CSE  DIRECT FOR COMPUTER & INFO SCIE & ENGINR
Start Date  : September 1,  2002  
Expires     : August 31,  2006     (Estimated)
Expected
Total Amt.  : $398706             (Estimated)
Investigator: Philip Johnson johnson@hawaii.edu  (Principal Investigator current)
              Daniel N. Port  (Co-Principal Investigator current)
Sponsor     : U of Hawaii
	      2530 Dole Street
	      Honolulu, HI  968222225    808/956-7800

NSF Program : 7214      HIGHLY DEPENDABLE COMPUTING
Fld Applictn: 
Program Ref : 9216,HPCC,
Abstract    :
              Highly dependable software is, by nature, predictable. For example, one can
              predict with confidence the circumstances under which the software will work
              and under which it will fail. Empirically-based 
approaches to creating
              predictable software are based on two assumptions:  (1) historical data can be
              used to develop and calibrate models that generate empirical predictions, and
              (2) there exists relationships between internal attributes of the software
              (i.e. concrete attributes such as size, effort, and defects) and external
              attributes of the software (i.e. abstract attributes such as quality or time to
              failure.).  Software measurement validation is the process of determining a
              predictive relationship between available internal 
attributes and
              correspondingly useful external attributes.

The general objective of this
              research is to design, implement, and validate software measures that support:
              (1) identification of fault-prone modules, enabling more efficient and
              effective allocation of 
quality assurance resources, and (2) an incremental
              software development method through incremental and developer-specific
              notifications and analyses.  

Empirical assessment of these methods and
              measures during use on the Mission data System project at Jet Propulsion
              Laboratory will advance both the theory and practice of software measurement
              validation. The 
research will also produce an open source software system for
              software measurement validation.  



