Title       : CAREER:Type Systems and Next Generation Tools for Scripting Language Extension
               Programming
Type        : Award
NSF Org     : CCR 
Latest
Amendment
Date        : March 7,  2003      
File        : a0237835

Award Number: 0237835
Award Instr.: Continuing grant                             
Prgm Manager: Sol J. Greenspan                        
	      CCR  DIV OF COMPUTER-COMMUNICATIONS RESEARCH 
	      CSE  DIRECT FOR COMPUTER & INFO SCIE & ENGINR
Start Date  : July 1,  2003       
Expires     : June 30,  2008       (Estimated)
Expected
Total Amt.  : $400000             (Estimated)
Investigator: David M. Beazley beazley@cs.uchicago.edu  (Principal Investigator current)
Sponsor     : University of Chicago
	      5801 South Ellis Avenue
	      Chicago, IL  606371404    773/702-8602

NSF Program : 2880      SOFTWARE ENGINEERING AND LANGU
Fld Applictn: 
Program Ref : 1045,1187,9216,HPCC,
Abstract    :
              0237835  
David Beazley
Univ of Chicago


Scripting languages are an
              increasingly important part of many software projects.  A key feature of
              scripting languages is that they can be integrated with existing programs,
              typically written in C or C++.  This integration of languages, commonly known
              as extension programming, is often achieved through the use of automatic code
              generation tools.  Unfortunately, the development of these tools has been
              relatively ad-hoc and uncoordinated.  The goal of this project is to provide a
              more formal foundation for extension programming by
recasting the problem in
              terms of type systems. This foundation will then be used to expand the scope of
              extension programming tools to include software reliability mechanisms such as
              contracts.  Finally,
the research will investigate support tools such as
              mixed-language debuggers.  The research will be conducted in the context of the
              SWIG project--an extension programming system already used by thousands
              of
programmers in industry, government, and academia.  As a result, the work
              will directly impact these users by pushing the extension building problem in
              new directions. Moreover, the research aims to bridge the practice of extension
              programming to more formal aspects of programming languages, software
              architecture, and software engineering.














