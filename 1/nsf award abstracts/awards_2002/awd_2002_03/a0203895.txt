Title       : Supporting Compiler/Simulator Co-Evolution for Architectural Exploration and
               Evaluation
Type        : Award
NSF Org     : ACI 
Latest
Amendment
Date        : September 13,  2002 
File        : a0203895

Award Number: 0203895
Award Instr.: Standard Grant                               
Prgm Manager: Frederica Darema                        
	      ACI  DIV OF ADVANCED COMPUT INFRA & RESEARCH 
	      CSE  DIRECT FOR COMPUTER & INFO SCIE & ENGINR
Start Date  : September 15,  2002 
Expires     : August 31,  2003     (Estimated)
Expected
Total Amt.  : $49990              (Estimated)
Investigator: J. Eliot B. Moss moss@cs.umass.edu  (Principal Investigator current)
              Charles C. Weems  (Co-Principal Investigator current)
Sponsor     : U of Massachusetts Amherst
	      408 Goodell Building
	      Amherst, MA  010033285    413/545-0698

NSF Program : 2884      NEXT GENERATION SOFTWARE PROGR
Fld Applictn: 0000099   Other Applications NEC                  
Program Ref : 9218,HPCC,
Abstract    :
              TITLE:  Supporting Compiler/Simulator Co-Evolution for Architectural Exploration
              and Evaluation

The project will address these issues by building a system
              that constructs key optimizer and simulator components from a common
              architectural description.  Prior work in generating compilers or simulators
              using only formal architecture descriptions had not succeeded in producing
              systems capable enough for real work.    That difficulty will over-come by not
              insisting on fully automatic construction.  Rather, the project focuses on
              making it easier for researcher and engineers to extend and modify key
              components using more specific model descriptions and a flexible, extensible
              framework.  Rather than building components from scratch, makes it easier to
              evolve components:  incremental architectural changes should require
              incremental effort to support.  This is a co-evolution approach since one must
              evolve both simulators and compilers optimizers simultaneously and
              consistently.

