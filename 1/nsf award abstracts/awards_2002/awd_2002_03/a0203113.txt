Title       : Collaborative Research: Theory and Implementation of Semidefinite Programming
               and its Applications to Combinatorial Optimization
Type        : Award
NSF Org     : CCR 
Latest
Amendment
Date        : June 17,  2002      
File        : a0203113

Award Number: 0203113
Award Instr.: Standard Grant                               
Prgm Manager: John Staudhammer                        
	      CCR  DIV OF COMPUTER-COMMUNICATIONS RESEARCH 
	      CSE  DIRECT FOR COMPUTER & INFO SCIE & ENGINR
Start Date  : June 15,  2002      
Expires     : May 31,  2005        (Estimated)
Expected
Total Amt.  : $254999             (Estimated)
Investigator: Renato D. C. Monteiro monteiro@isye.gatech.edu  (Principal Investigator current)
Sponsor     : GA Tech Res Corp - GIT
	      Office of Sponsored Programs
	      Atlanta, GA  303320420    404/385-0866

NSF Program : 2865      GRAPH & SYMB & GEO COMPUTATION
Fld Applictn: 
Program Ref : 9216,HPCC,
Abstract    :
              ABSTRACT
0203113
Monteiro, Renato 
GA Tech Res Corp -GIT

In a semidefinite
              programming (SDP) problem, a linear function of a symmetric matrix variable X
              is minimized subject to linear equality constraints on X and the essential
              constraint that X be positive semidefinite.  Many mathematical optimization
              problems can be cast as SDP problems including linear programs, convex
              quadratic problems with convex quadratic inequality constraints, matrix norm
              minimization problems, and a variety of maximum and minimum eigenvalue
              problems. In addition, SDP has many applications in combinatorial optimization,
              engineering, statistics, and robust optimization.

Today, there are numerous
              algorithms and codes available for solving SDPs, and these methods can be
              loosely grouped into two classes: second-order interior-point (IP) methods and
              first-order nonlinear programming (NLP) methods. The choice of which class to
              use for a particular application is determined primarily by
problem size ---
              second-order IP methods are more efficient on small- to medium-scale problems
              while first-order NLP methods are better for large-scale problems.

