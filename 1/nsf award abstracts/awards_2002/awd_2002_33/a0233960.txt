Title       : SGER: Algebraic Languages for Reconfigurable Hybrid Systems
Type        : Award
NSF Org     : CCR 
Latest
Amendment
Date        : August 21,  2002    
File        : a0233960

Award Number: 0233960
Award Instr.: Standard Grant                               
Prgm Manager: D. Helen Gill                           
	      CCR  DIV OF COMPUTER-COMMUNICATIONS RESEARCH 
	      CSE  DIRECT FOR COMPUTER & INFO SCIE & ENGINR
Start Date  : August 15,  2002    
Expires     : July 31,  2003       (Estimated)
Expected
Total Amt.  : $49999              (Estimated)
Investigator: William C. Rounds rounds@umich.edu  (Principal Investigator current)
Sponsor     : University of Michigan
	      3003 S State St. RM 1062
	      Ann Arbor, MI  481091274    734/764-1817

NSF Program : 2801      Embedded & Hybrid Systems(EHS)
Fld Applictn: 
Program Ref : 9216,9237,HPCC,
Abstract    :
              Rounds
CCR-0233960
This project, under the
embedded and hybrid systems
              program (EHS),   investigates  a surprisingly simple method for
integrating 
              process-algebraic techniques with hybrid automaton-based techniques for
              creating a mathematical foundation upon which real programming languages for 
              hybrid and embedded systems can be based. More specifically, it addresses a new
              class of  hybrid systems
which can reconfigure themselves to handle different
              physical tasks at different times, yet operating concurrently. Very little
              progress has been achieved to date on such problems.

This research
              investigates a hybrid extension of Milner's pi-calculus to allow processes
              written in this language to interact with continuous environments. The
              extension is the phi-calculus.
The reasons for pursuing this approach are as
              follows. (1) The phi-calculus is believed to  subsume and properly extend most
              of the current versions of hybrid systems; for example, hybrid automata  hybrid
               I-O automata  hybrid Petri nets,  and HybridCC; (2) The goal is to be able to
              model distributed logical control and interaction with continuous processes in
              a principled structural way. The pi-calculus, using its algebraic
              process-structuring primitives, has been shown to  be
a rich  language in
              which many interesting discrete concurrent phenomena can be expressed: a
              language for, and theory of, communicating processes which can  reconfigure
              themselves; a language in which distributed objects and classes can be defined;
              and a language and theory
capable not only of expressing interaction, but
              arbitrary computation, in that the lambda-calculus of Church can be translated
              into it; (3) This all suggests that successful hybrid versions of algebraic
              
calculi will have novel and elegant ways of expressing hybrid systems
              --possibilities for distributed control which would be awkward, if not
              impossible, to express in current formalisms.

