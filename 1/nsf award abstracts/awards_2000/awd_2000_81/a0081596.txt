Title       : ITR: Principles of Distributed Component-Based Software
Type        : Award
NSF Org     : CCR 
Latest
Amendment
Date        : August 6,  2001     
File        : a0081596

Award Number: 0081596
Award Instr.: Continuing grant                             
Prgm Manager: Frank D. Anger                          
	      CCR  DIV OF COMPUTER-COMMUNICATIONS RESEARCH 
	      CSE  DIRECT FOR COMPUTER & INFO SCIE & ENGINR
Start Date  : September 1,  2000  
Expires     : August 31,  2003     (Estimated)
Expected
Total Amt.  : $499809             (Estimated)
Investigator: Bruce W. Weide weide@cis.ohio-state.edu  (Principal Investigator current)
              Paolo Bucci  (Co-Principal Investigator current)
              Timothy J. Long  (Co-Principal Investigator current)
              William F. Ogden  (Co-Principal Investigator current)
              Paolo A. Sivilotti  (Co-Principal Investigator current)
Sponsor     : Ohio State Univ Res Fdn
	      1960 Kenny Road
	      Columbus, OH  432101016    614/292-3732

NSF Program : 1640      INFORMATION TECHNOLOGY RESEARC
Fld Applictn: 
Program Ref : 1658,1660,9216,HPCC,
Abstract    :
              Reasoning about the behavior of large component-based software systems demands a
              "modular" or "compositional" reasoning system, in which summary properties of a
              system's pieces are composable to deduce properties of the entire system
              without delving into the internal details of those pieces.  This research
              focuses on contributing principles for how to design component-based software
              that supports modular reasoning, and to help bring this new knowledge into
              practical application with commercial distributed component technologies. 
              Specifically, the project investigates: (1) developing and describing detailed
              principles for designing the interfaces of software components so that they
              support both modular reasoning about system behavior and effective and
              efficient distribution and execution; (2) showing how to write
              human-understandable behavioral specifications for the interfaces of components
              designed using the above principles; (3) demonstrating additional practical
              benefits from having formal specifications available to software engineering
              tools.  The generality and efficacy of the results will be evaluated through
              construction of prototype tools that support distributed component-based
              software design and development in a programming-language-neutral environment,
              and by observing the effects of using such tools in the classroom to see how
              much students benefit from the tools' new specification-enabled capabilities as
              they
design and develop distributed component-based software systems.



