Title       : CAREER: Continuous Change Management of Component-Based Software
Type        : Award
NSF Org     : CCR 
Latest
Amendment
Date        : March 20,  2003     
File        : a0093489

Award Number: 0093489
Award Instr.: Continuing grant                             
Prgm Manager: Sol J. Greenspan                        
	      CCR  DIV OF COMPUTER-COMMUNICATIONS RESEARCH 
	      CSE  DIRECT FOR COMPUTER & INFO SCIE & ENGINR
Start Date  : July 1,  2001       
Expires     : June 30,  2006       (Estimated)
Expected
Total Amt.  : $294924             (Estimated)
Investigator: Adriaan W. van der Hoek andre@ics.uci.edu  (Principal Investigator current)
Sponsor     : U of Cal Irvine
	      300 University Tower
	      Irvine, CA  926977600    949/824-4768

NSF Program : 2880      SOFTWARE ENGINEERING AND LANGU
Fld Applictn: 
Program Ref : 1045,9216,HPCC,
Abstract    :
              Configuration management (CM) is a software engineering discipline 
that
              centers on managing the evolution of the artifacts that are 
continuously
              produced and changed over the course of a software 
development project.  The
              combined move towards developing software 
out of sets of components and
              managing software after it has been 
delivered to its customers radically
              changes the nature of CM, 
breaking several of its fundamental
              assumptions.

Addressing these issues, the objective of this research is to
              
develop and empirically evaluate the models, policies, and tools 
that will
              lay the foundation for the creation of the next 
generation of configuration
              management systems---those capable of 
managing, in a seamless and continuous
              fashion, component-based 
software throughout its life time.  The research
              hypothesizes that 
architecture description languages are the key to providing
              this 
functionality: they create a single abstraction through which all 
CM
              functionality can be provided.  Specifically, we propose to 
build
              architecture-based CM models, associated new development 
and deployment
              policies, and the supporting tools necessary for 
demonstration and
              evaluation.

Parts of the research will be used to seed the educational
              aspects 
of the proposal: to establish the undergraduate research factory in
              
which teams of undergraduate students will be educated in carrying 
out
              research projects.



