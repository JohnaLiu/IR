Title       : Component Technologies for Next-Generation Software Development Environments
Type        : Award
NSF Org     : CCR 
Latest
Amendment
Date        : April 9,  2001      
File        : a9970790

Award Number: 9970790
Award Instr.: Continuing grant                             
Prgm Manager: Sol J. Greenspan                        
	      CCR  DIV OF COMPUTER-COMMUNICATIONS RESEARCH 
	      CSE  DIRECT FOR COMPUTER & INFO SCIE & ENGINR
Start Date  : September 15,  1999 
Expires     : August 31,  2003     (Estimated)
Expected
Total Amt.  : $224999             (Estimated)
Investigator: Gail E. Kaiser kaiser@cs.columbia.edu  (Principal Investigator current)
Sponsor     : Columbia University
	      1210 Amsterdam Avenue; MC 2205
	      New York, NY  10027    212/854-6851

NSF Program : 2880      SOFTWARE ENGINEERING AND LANGU
Fld Applictn: 0000099   Other Applications NEC                  
Program Ref : 9216,HPCC,
Abstract    :
              9970790   Kaiser, Gail E.      Columbia University
Component Technologies for
              Next-Generation Software Development

This project furthers the development
              of components and frameworks for team software development environments by
              combining hypermedia, multi-user domain (MUD), and 3D visualization
              technologies, to achieve "software immersion".  The Columbia researchers are
              investigating mechanisms for:  Efficiently generating the layout and content of
              3D virtual worlds from heterogeneous backend information resources (e.g.,
              configuration management and document management);  Smoothly updating the 3D
              virtual world as the backend materials are simultaneously modified by the
              multiple users (externally and from within the environment);  Seamlessly moving
              user avatars among distinct virtual worlds and  "themes" to scale up to teams
              of teams and large collections of information spaces.  Previous work on
              collaborative virtual environments requires the framework to "own" the data
              rather than drawing from autonomous sources, hardwires a particular layout and
              theme depicting a relatively static snapshot of that data, and limits the
              maximum number of simultaneous users and teams.  Further, while there has been
              much work on 2D and 3D software visualization for program understanding, and
              some work on non-graphic virtual information spaces shared by geographically
              distributed team members, there has been little or no prior work on immersing
              software development staff within a 2D or 3D virtual world intended to
              represent the software development artifacts and/or its development process.

