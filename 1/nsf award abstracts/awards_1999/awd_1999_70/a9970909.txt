Title       : Automated Development of Software for Program Analysis and Transformation
Type        : Award
NSF Org     : CCR 
Latest
Amendment
Date        : June 16,  2000      
File        : a9970909

Award Number: 9970909
Award Instr.: Continuing grant                             
Prgm Manager: Frank D. Anger                          
	      CCR  DIV OF COMPUTER-COMMUNICATIONS RESEARCH 
	      CSE  DIRECT FOR COMPUTER & INFO SCIE & ENGINR
Start Date  : June 15,  1999      
Expires     : August 31,  2001     (Estimated)
Expected
Total Amt.  : $203833             (Estimated)
Investigator: Alan R. Siegel   (Principal Investigator current)
              Robert A. Paige  (Principal Investigator former)
Sponsor     : New York University
	      
	      New York, NY  10012    212/598-3131

NSF Program : 2880      SOFTWARE ENGINEERING AND LANGU
Fld Applictn: 0000099   Other Applications NEC                  
Program Ref : 9216,HPCC,
Abstract    :
              9970909   Robert A. Paige
The objectives of this research are to improve
              software productivity, reliability, and performance of complex software
              systems.  The approach uses program transformations to turn very high
              level
perspicuous problem specifications into efficient implementations.  The
              transformations to be used include dominated convergence (for implementing
              fixed points efficiently), finite differencing (for replacing costly repeated
              calculations by less expensive incremental counterparts), data structure
              selection (for simulating associative access on a RAM in real time), and
              partial evaluation (for eliminating interpretive overhead and simplification). 
              These transformations are to be implemented in a transformational system, which
              itself is to be transformed from an executable specification into efficient C
              code.  Experiments to be conducted are expected to demonstrate how earlier
              results showing a five-fold increase in the productivity of efficient algorithm
              implementation in C in comparison to hand-coded C for small-scale examples can
              be extended to large-scale examples of C programs that might exceed 100,000
              lines.  If successful, the results are expected to have important scientific
              and economic impact on the development of algorithmic software with particular
              application to program analysis and transformation.

