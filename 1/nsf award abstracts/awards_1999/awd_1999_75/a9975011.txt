Title       : Next Generation Software: Adaptive, Performance-Portable Software for
               Next-Generation and Immersive Applications
Type        : Award
NSF Org     : ACI 
Latest
Amendment
Date        : September 14,  1999 
File        : a9975011

Award Number: 9975011
Award Instr.: Standard Grant                               
Prgm Manager: Frederica Darema                        
	      ACI  DIV OF ADVANCED COMPUT INFRA & RESEARCH 
	      CSE  DIRECT FOR COMPUTER & INFO SCIE & ENGINR
Start Date  : September 15,  1999 
Expires     : August 31,  2003     (Estimated)
Expected
Total Amt.  : $600000             (Estimated)
Investigator: Kai Li li@cs.princeton.edu  (Principal Investigator current)
              Jaswinder P. Singh  (Co-Principal Investigator current)
              Thomas A. Funkhouser  (Co-Principal Investigator current)
Sponsor     : Princeton University
	      
	      Princeton, NJ  08544    609/452-3000

NSF Program : 2884      NEXT GENERATION SOFTWARE PROGR
Fld Applictn: 0000099   Other Applications NEC                  
Program Ref : 2884,9218,HPCC,
Abstract    :
              EIA-9975011
Princeton University
Kai Li

Next Generation Software: Adaptive,
              Performance-Portable Software for Next-Generation and Immersive
              Applications

A new generation of applications is becoming very important for
              high-performance computing, including collaborative design, interactive
              walkthroughs and large data visualization, and telepresence.  They require
              tremendous resources including CPU, memory, storage, and audio/visual devices,
              and they have substantially different characteristics, performance goals and
              system interactions than traditional scientific applications.  For example,
              they have extremely irregular and unpredictable data access needs and workload
              distributions, they interact more dynamically and with many more types of
              input/output sensors and devices, they involve dynamic user interaction and
              steering, and their goal is to deliver the best possible quality at a fixed
              output refresh rate rather than a solution of fixed quality in the minimum
              possible time.  As computer architectures become more complex, it becomes
              increasingly difficult to develop such applications to achieve the desired
              performance.  Three properties are critical:  (i) high performance for rich
              interactive behavior, (ii) adaptability and isolation in all layers (i.e. the
              complexity, and unpredictability demand that each layer of application or
              system software must adapt to the layers above and below it-through performance
              modeling and through runtime feedback and adaptation-and should try to shield
              the neighboring layers from each other's complexity), and (iii) performance
              portability across component upgrades and across the different major types of
              platforms that may be used in such environments.  Our goal is to develop the
              software building blocks, runtime systems and design methodologies to assist
              such application development.  

