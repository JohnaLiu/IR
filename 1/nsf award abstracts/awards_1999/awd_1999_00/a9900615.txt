Title       : Profile-Driven Compile-Time Optimizations Targeting Commodity Desktop
               Environments
Type        : Award
NSF Org     : CCR 
Latest
Amendment
Date        : June 15,  2001      
File        : a9900615

Award Number: 9900615
Award Instr.: Standard Grant                               
Prgm Manager: Peter J. Varman                         
	      CCR  DIV OF COMPUTER-COMMUNICATIONS RESEARCH 
	      CSE  DIRECT FOR COMPUTER & INFO SCIE & ENGINR
Start Date  : July 1,  1999       
Expires     : December 31,  2002   (Estimated)
Expected
Total Amt.  : $252427             (Estimated)
Investigator: Waleed M. Meleis meleis@ece.neu.edu  (Principal Investigator current)
              David R. Kaeli  (Co-Principal Investigator current)
Sponsor     : Northeastern University
	      360 Huntington Avenue
	      Boston, MA  021155096    617/373-5600

NSF Program : 4715      COMPUTER SYSTEMS ARCHITECTURE
Fld Applictn: 
Program Ref : 9215,HPCC,
Abstract    :
              While the commodity desktop environment is growing in popularity, researchers
              continue to study architecture-based research questions using standard
              benchmark programs.  Benchmarks possess behavior that is fundamentally
              different from the behavior of desktop applications.  For instance, the
              reliance of desktop applications on the hosting operating system and
              dynamically linked libraries warrants careful consideration when pursuing
              performance-driven architectural tradeoffs targeting a desktop
              environment.

In the future these applications will be developed in
              object-oriented languages.  Again, this introduces a different program model
              that has not been rigorously addressed in the architectural research community.
              Object-oriented programs place significant pressure on instruction caches and
              branch prediction mechanisms. The focus of this research is to provide
              compile-time optimizations that take advantage of the profile information
              currently available in the desktop application environment.  The goal is to
              develop new profile-based compiler optimization algorithms that can
              significantly accelerate the performance of desktop applications.

This
              project pursues the following research areas: Parameter Value Prediction,
              Indirect Branch Prediction, Instruction Memory Coloring, Weighted Completion
              Time Instruction Scheduling. Graph-based program analysis using program
              profiles is used to guide these optimizations.  Improved optimization
              techniques are employed to produce tuned executable images.  These
              optimizations are implemented in existing compilation environments to quantify
              their performance gains.


