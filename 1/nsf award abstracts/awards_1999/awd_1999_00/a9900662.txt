Title       : The Impact of Repeated Maintenance on Software Maintainability
Type        : Award
NSF Org     : CCR 
Latest
Amendment
Date        : July 23,  1999      
File        : a9900662

Award Number: 9900662
Award Instr.: Standard Grant                               
Prgm Manager: Frank D. Anger                          
	      CCR  DIV OF COMPUTER-COMMUNICATIONS RESEARCH 
	      CSE  DIRECT FOR COMPUTER & INFO SCIE & ENGINR
Start Date  : September 1,  1999  
Expires     : August 31,  2001     (Estimated)
Expected
Total Amt.  : $99938              (Estimated)
Investigator: Stephen R. Schach srs@vuse.vanderbilt.edu  (Principal Investigator current)
Sponsor     : Vanderbilt University
	      512 Kirkland Hall
	      Nashville, TN  37240    615/322-2631

NSF Program : 2880      SOFTWARE ENGINEERING AND LANGU
Fld Applictn: 0000099   Other Applications NEC                  
Program Ref : 9216,HPCC,
Abstract    :
              9900662    Schach, Stephen R.
If a software product performs useful functions
              it will undergo repeated maintenance during its lifetime, which may be 15 or 20
              years, or even longer.  Unfortunately, repeated maintenance usually has a
              deleterious effect on software quality.  As a result, it is sometimes necessary
              to reimplement (redesign and recode) part of a software product before
              additional maintenance can be performed on that part of the product.  Multiple
              versions of a telecommunications package written in C have been acquired.   The
              data for the proposed research consist of numerous versions of 155 files of C
              code.  The effect of repeated maintenance on each of the files is investigated.
               Special attention is paid to maintenance activities that precede
              reimplementation in order to determine precisely how a portion of a software
              product becomes unmaintainable.  In particular, when reimplementation of a
              portion of a product has occurred, the coupling within that portion is examined
              over the lifetime of that portion, both before and after the reimplementation. 
              The hypothesis that is tested is that suboptimal coupling is a major cause of
              poor maintainability.  The results of this research will contribute to
              reduction of software maintenance and hence to lower software costs.

