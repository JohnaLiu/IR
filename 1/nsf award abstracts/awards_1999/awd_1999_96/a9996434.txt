Title       : Feasibility Analysis in Safety-Critical Shared Resource Systems
Type        : Award
NSF Org     : CCR 
Latest
Amendment
Date        : January 13,  2000   
File        : a9996434

Award Number: 9996434
Award Instr.: Standard Grant                               
Prgm Manager: Mukesh Singhal                          
	      CCR  DIV OF COMPUTER-COMMUNICATIONS RESEARCH 
	      CSE  DIRECT FOR COMPUTER & INFO SCIE & ENGINR
Start Date  : August 15,  1999    
Expires     : August 31,  2000     (Estimated)
Expected
Total Amt.  : $95171              (Estimated)
Investigator: Sanjoy K. Baruah baruah@cs.unc.edu  (Principal Investigator current)
Sponsor     : U of NC Chapel Hill
	      300 Bynum Hall
	      Chapel Hill, NC  27514    919/962-5625

NSF Program : 2876      OPER SYSTEMS AND COMPILERS
Fld Applictn: 
Program Ref : 2891,9216,HPCC,
Abstract    :
              Feasibility analysis of a real-time system is the process of  determining
              whether the system can be scheduled to meet its  temporal requirements.  In
              order to be able to build better  automated tools for constructing complex
              real-time  application systems, we must first clearly understand what  factors
              are responsible for rendering certain systems  feasible and others infeasible. 
              This research proposes to  enhance our understanding of the phenomenon of
              feasibility  in real-time systems, and to obtain new tools, techniques,  and
              methodologies for feasibility analysis in such systems.  This will be done by
              providing a firm theoretical foundation  to the analysis of feasibility in
              real-time systems.  More  specifically, questions relating to the following
              topics  will be addressed: (i) Obtaining a generic framework for 
              feasibility-analysis of a system, through the identification  of its
              ``worst-case behavior". (ii) Designing new abstract  models of real-time tasks
              to accurately capture salient  features of real-life application systems, and
              identifying  rules for mapping application systems onto the most  appropriate
              models. (iii) Analyzing various task models in  order to enhance our
              understanding of what intrinsic  properties render a model intractable from a
              feasibility  analysis point of view, and to identify very general classes  of
              tractable models. (iv) Determining alternate methods of  analysis for task
              models for which feasibility-analysis is  provably intractable. (v)Constructing
              ``proof-of-concept''  software that validates the usefulness of the theoretical
               results obtained during the course of this research.
