Title       : CAREER: A Formal Programming Methodology with Applications to Developing
               Automated Verifiers
Type        : Award
NSF Org     : CCR 
Latest
Amendment
Date        : May 1,  2000        
File        : a9985239

Award Number: 9985239
Award Instr.: Standard Grant                               
Prgm Manager: Sol J. Greenspan                        
	      CCR  DIV OF COMPUTER-COMMUNICATIONS RESEARCH 
	      CSE  DIRECT FOR COMPUTER & INFO SCIE & ENGINR
Start Date  : June 1,  2000       
Expires     : May 31,  2004        (Estimated)
Expected
Total Amt.  : $213195             (Estimated)
Investigator: James L. Caldwell jlc@cs.uwyo.edu  (Principal Investigator current)
Sponsor     : University of Wyoming
	      Box 3355 Univ Station
	      Laramie, WY  820713355    307/766-5320

NSF Program : 2880      SOFTWARE ENGINEERING AND LANGU
Fld Applictn: 0000099   Other Applications NEC                  
Program Ref : 1045,1187,9150,9216,HPCC,
Abstract    :
              CCR-9985239
CAREER: A Formal Programming Methodology with Applications
              to
Developing Automated Verifiers
PI: James L. Caldwell

The goals of this
              research are (i) the development of new methods for
formal program development
              which combine existing approaches to
verification and synthesis; (ii) the
              application of those methods to
the development of correct-by-construction
              verification engines; and
(iii) integrating the formalized mathematics that
              supports these
methods into the undergraduate computer science curriculum. 
              In
program development practice it is sometimes more expedient to verify
a
              known program, while at other times, synthesis is the better
approach.  The
              research investigates methods of combining these
complementary modes of
              development within a single framework to
justify the correctness of complex
              software artifacts.  The work
largely takes place within the framework of the
              constructive type
theory provided by the Nuprl system.  This new method of
              program
development is applied and refined in the context of efforts to
              secure
correct implementations of automated verifiers; model checkers
              and
decision procedure based verification engines.  The
              digital
representations of mathematical definitions, proofs, proof
              strategies,
and theorems that support this mode of program development
              formally
encode the applied mathematics of Computer Science.  This
              research
explores new ways to incorporate this material in the
              undergraduate
classroom.
