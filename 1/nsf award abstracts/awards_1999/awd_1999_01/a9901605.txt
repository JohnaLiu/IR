Title       : CISE Postdoctoral Research Associates: A Model Construction Tool Suite for
               Finite-State Verification Java (CCR)
Type        : Award
NSF Org     : EIA 
Latest
Amendment
Date        : August 27,  1999    
File        : a9901605

Award Number: 9901605
Award Instr.: Standard Grant                               
Prgm Manager: Kenneth C. Whang                        
	      EIA  DIVISION OF EXPERIMENTAL & INTEG ACTIVIT
	      CSE  DIRECT FOR COMPUTER & INFO SCIE & ENGINR
Start Date  : September 1,  1999  
Expires     : August 31,  2001     (Estimated)
Expected
Total Amt.  : $65982              (Estimated)
Investigator: John M. Hatcliff hatcliff@cis.ksu.edu  (Principal Investigator current)
              David A. Schmidt  (Co-Principal Investigator current)
              Matthew Dwyer  (Co-Principal Investigator current)
Sponsor     : Kansas State University
	      2 Fairchild Hall
	      Manhattan, KS  665061103    913/532-6222

NSF Program : 2885      CISE RESEARCH INFRASTRUCTURE
Fld Applictn: 0000099   Other Applications NEC                  
Program Ref : 9192,9218,HPCC,
Abstract    :
              9901605
Hatcliff, John M.
Dwyer, Matthew
Schmidt, David A.
Kansas State
              University

CISE Postdoctoral Research Associates in Experimental Computer
              Science: A Model Construction Tool Suite for Finite-State Verification of
              Java

Modern software systems are often concurrent, distributed, and highly
              complex, yet they must be
extremely reliable and correct.  Although originally
              applied to hardware systems, finite-state verification (FSV) techniques (e.g.
              model checking) are emerging as the front-runner in the race to automate
              high-quality assurance of modern software.  To apply FSV techniques, one must
              create a finite-state transition system model of the software system's
              behavior.  The model and a property to be verified are given to a FSV tool, and
              verification is performed by mechanically enumerating all reachable states in
              the transition system and checking that the property holds at each state. 
              Currently, finite-state models of software must be created by hand. Hand-coding
              complex language features such as parameterized generic modules, procedures,
              threads, and dynamically created program data and threads of control is tedious
              and error-prone, and will not scale to large production systems.

In other
              National Science Foundation supported work, techniques, methodologies, and
              tools are being developed for automatically constructing finite-state models of
              software using abstract interpretation and partial evaluation technology.  The
              research associate is coordinating the development of a model construction tool
              suite for Java software.  The associate is working closely with the PI and
              Co-PIs on both the theoretical and implementation aspects of the project and is
              responsible for supervising the implementation work of junior graduate
              students.  These tasks provide an avenue for the associate's growth in
              performing and leading foundational and experimental research.



