Title       : ITR/SY: Reliability Theory of Software Designed using Components
Type        : Award
NSF Org     : CCR 
Latest
Amendment
Date        : June 19,  2002      
File        : a0112654

Award Number: 0112654
Award Instr.: Standard Grant                               
Prgm Manager: Frank D. Anger                          
	      CCR  DIV OF COMPUTER-COMMUNICATIONS RESEARCH 
	      CSE  DIRECT FOR COMPUTER & INFO SCIE & ENGINR
Start Date  : September 1,  2001  
Expires     : August 31,  2004     (Estimated)
Expected
Total Amt.  : $299940             (Estimated)
Investigator: Richard Hamlet hamlet@cs.pdx.edu  (Principal Investigator current)
Sponsor     : Portland State University
	      P O BOX 751
	      Portland, OR  972070751    503/725-3423

NSF Program : 1686      ITR SMALL GRANTS
Fld Applictn: 
Program Ref : 1658,9216,HPCC,
Abstract    :
              Proposal 0112654

Reliability Theory of Software Designed Using
              Components

Dick Hamlet, Portland State University


Defining, developing,
              and reusing software components is today accepted
as the best line of attack
              on the problem of expensive and unreliable
software systems.  In other
              engineering disciplines, component-based
systems have been the key to rational
              design, in which engineers can
predict the behavior of complex systems before
              they are built and
tested.  This research focuses on the quality of software
              components.
A foundational theory is developed to allow the designer of a
              system,
working from data sheets that describe proposed components, to
              estimate
the reliability of the system that will result.

Goals of this
              research are:
-- To develop a quantitative, mathematical description of the
              way in
which component reliability measurements can be made and later used
              for
calculating system reliability.
-- To experiment with the theory in
              simple, revealing cases, to expose
problems in the theory and improve it by
              experimental feedback.
-- To implement research-prototype support tools,
              particularly for the
system designer, that make experimentation easier.


