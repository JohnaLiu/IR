Title       : CAREER: Controlling Space Properties of Higher-Order Typed Programs
Type        : Award
NSF Org     : CCR 
Latest
Amendment
Date        : April 9,  2001      
File        : a0196063

Award Number: 0196063
Award Instr.: Continuing grant                             
Prgm Manager: Yuan-Chieh Chow                         
	      CCR  DIV OF COMPUTER-COMMUNICATIONS RESEARCH 
	      CSE  DIRECT FOR COMPUTER & INFO SCIE & ENGINR
Start Date  : August 1,  2000     
Expires     : May 31,  2002        (Estimated)
Expected
Total Amt.  : $200002             (Estimated)
Investigator: Amr A. Sabry sabry@cs.indiana.edu  (Principal Investigator current)
Sponsor     : Indiana University
	      P O Box 1847
	      Bloomington, IN  474021847    812/855-0516

NSF Program : 2876      OPER SYSTEMS AND COMPILERS
Fld Applictn: 
Program Ref : 1045,1187,9216,HPCC,
Abstract    :
              Higher-order, typed, functional languages provide an  abstract view of
              computation that supports software  engineering activities elegantly, and that
              is amenable to  formal verification. Such languages do not, however, support 
              direct control over computational resources as is  needed in domains such as
              operating systems, the Internet,  and embedded systems. This project aims at
              augmenting such  languages with programming constructs, semantic models, 
              compiling and analysis tools for controlling computational  resources,
              particularly space usage. Despite its focus on  functional languages, the
              research addresses a problem  common to other modern programming languages like
              Java that  include automatic space management. All such languages  suffer from
              unpredictable space behavior, which causes  programmers to waste considerable
              resources on locating  suspected space leaks and optimizing space usage. 
              Furthermore, many of the methods, like the type-based  encapsulation of memory
              threads, are mostly language-  independent, and hence universally applicable.
              Two of the  potentially most exciting applications of this language-  supported
              encapsulation are the guaranteeing of safety for  mobile code on the Internet
              and the optimization of  parallel programs.
