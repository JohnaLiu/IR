Title       : ITR/SY(CISE): Putting Multi Stage Annotations to Work
Type        : Award
NSF Org     : CCR 
Latest
Amendment
Date        : July 27,  2001      
File        : a0113569

Award Number: 0113569
Award Instr.: Standard Grant                               
Prgm Manager: Yuan-Chieh Chow                         
	      CCR  DIV OF COMPUTER-COMMUNICATIONS RESEARCH 
	      CSE  DIRECT FOR COMPUTER & INFO SCIE & ENGINR
Start Date  : July 1,  2001       
Expires     : June 30,  2004       (Estimated)
Expected
Total Amt.  : $370000             (Estimated)
Investigator: Walid M. Taha   (Principal Investigator current)
              Paul Hudak  (Co-Principal Investigator current)
Sponsor     : Yale University
	      P.O. Box 208337
	      New Haven, CT  065208337    203/432-2460

NSF Program : 1686      ITR SMALL GRANTS
Fld Applictn: 
Program Ref : 1658,9215,HPCC,
Abstract    :
              Techniques such as program generation, partial evaluation, just-in-time
              compilation, and run-time code generation respond to the need for general
              purpose programs which do not pay unnecessary
run-time overheads.  The thesis
              of this project is that a uniform, principled, high-level, and practical view
              of these diverse techniques is possible through multi-stage programming, a
              novel paradigm for the development of maintainable, high-performance software. 
              The key idea in multi-stage programming is the use of simple, high-level
              annotations to allow the programmer to break down the cost of a computation
              into distinct stages.

The goal of this proposal is to demonstrate that the
              theoretical machinery that has been developed for multi-stage programming can
              be put to work.  This project will involve the development of compilers
of
              multi-stage programming languages, addressing both practical and theoretical
              problems that arise in the development of such systems, and using these
              compilers in interesting applications ranging from dynamic programming
              algorithms and rewriting systems to implementations of domain specific
              programming languages.
