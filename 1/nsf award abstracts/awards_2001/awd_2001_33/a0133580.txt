Title       : CAREER: Automatically Generating Specifications to Improve Program Correctness
               and Maintainability
Type        : Award
NSF Org     : CCR 
Latest
Amendment
Date        : January 22,  2002   
File        : a0133580

Award Number: 0133580
Award Instr.: Continuing grant                             
Prgm Manager: Sol J. Greenspan                        
	      CCR  DIV OF COMPUTER-COMMUNICATIONS RESEARCH 
	      CSE  DIRECT FOR COMPUTER & INFO SCIE & ENGINR
Start Date  : February 1,  2002   
Expires     : January 31,  2007    (Estimated)
Expected
Total Amt.  : $300000             (Estimated)
Investigator: Michael D. Ernst mernst@lcs.mit.edu  (Principal Investigator current)
Sponsor     : MIT
	      77 Massachusetts Avenue
	      Cambridge, MA  021394307    617/253-1000

NSF Program : 2880      SOFTWARE ENGINEERING AND LANGU
Fld Applictn: 
Program Ref : 1045,1187,9216,HPCC,
Abstract    :
              CCR-0133580
CAREER: Automatically Generating Specifications to Improve Program
              Correctness and Maintainability
Michael D. Ernst

Ensuring software
              correctness, modifying software, and many other software
engineering tasks are
              greatly eased by the presence of specifications that
document program
              behavior.  Unfortunately, specifications are usually
absent, leading to
              problems with program understanding and maintenance.
This research extends
              work in automatically generating (inferring) partial
program specifications
              from program executions.  The research goals are to
detect conditional
              invariants (implications) that are true only sometimes,
to scale the
              technology, to enable online processing, to investigate new
inference
              strategies, to improve usability, to evaluate via experiments and
case
              studies, to integrate the techniques and tools into education, and to
transfer
              technology to industry.  The research has three broad impacts: (1)
it
              explains, advances, and evaluates the theory and practice of
              automatic
generation of program specifications; (2) it enables easier,
              more
effective, and broader use of specifications, by automating generation
              of
partial specifications and by extending their scope to likely (as
              opposed
to guaranteed) properties; and (3) it applies specifications to
              specific
program tasks via new techniques and tools for program
              modification,
testing, reuse, and documentation.  Evaluation includes
              theoretical
evaluations of the accuracy of the underlying techniques, case
              studies of
substantial software projects, and controlled experiments to
              determine the
efficacy of the resulting tools.

