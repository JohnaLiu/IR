Title       : Integrating Discrete Mathematics via CS-Complete Examples in a Model CC2001
               Curriculum
Type        : Award
NSF Org     : DUE 
Latest
Amendment
Date        : December 17,  2001  
File        : a0127483

Award Number: 0127483
Award Instr.: Standard Grant                               
Prgm Manager: Ernest L. McDuffie                      
	      DUE  DIVISION OF UNDERGRADUATE EDUCATION     
	      EHR  DIRECT FOR EDUCATION AND HUMAN RESOURCES
Start Date  : January 1,  2002    
Expires     : December 31,  2003   (Estimated)
Expected
Total Amt.  : $74026              (Estimated)
Investigator: Timothy S. Gegg-Harrison Tim.Gegg-Harrison@oberlin.edu  (Principal Investigator current)
              Gary Bunce  (Co-Principal Investigator current)
Sponsor     : Oberlin College
	      
	      Oberlin, OH  44074    440/775-8461

NSF Program : 7427      CCLI-EDUCATIONAL MATERIALS DEV
Fld Applictn: 0000099   Other Applications NEC                  
Program Ref : 7427,9178,SMET,
Abstract    :
              Computer Science (31)
We are addressing a major issue facing many computer
              science students, i.e., that they are deficient in mathematics in general and
              that they do not see the relevance of mathematics to computer science, by
              integrating discrete mathematics into the first-year computer science
              curriculum via CS-Complete examples. A CS-Complete example is a problem that
              covers the topics of representation, problem solving, algorithms, recursion,
              induction, and data structures. In order to further help with the integration
              of discrete mathematics into the first year computer science sequence, we are
              constructing software tools that provide students with an enhanced integrated
              development environment for Java that enables them to analyze their computer
              programs (in terms of their correctness and time complexity) while they are
              creating them.

There are two primary goals of this project. First, we are
              producing a useful software development tool that enhances instruction in the
              introductory computer science curriculum and is useful for practicing software
              developers as well. Second, we are producing model first and second course
              syllabi that cover all of the core topics of the Programming Fundamentals plus
              over 25% of the core topics of the Discrete Structures, Algorithms and
              Complexity, and Software Engineering areas of the Computing Curricula 2001
              proposal for Computer Science.
